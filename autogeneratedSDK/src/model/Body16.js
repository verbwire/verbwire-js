/**
 * Verbwire API documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';

/**
* The Body16 model module.
* @module model/Body16
* @version 1.0.0
*/
export default class Body16 {
    /**
    * Constructs a new <code>Body16</code>.
    * @alias module:model/Body16
    * @class
    * @param sourceChain {module:model/Body16.SourceChainEnum} 
    * @param destChain {module:model/Body16.DestChainEnum} 
    * @param tokenId {String} 
    * @param sourceWalletAddress {String} 
    * @param recipientWalletAddress {String} 
    */

    constructor(sourceChain, destChain, tokenId, sourceWalletAddress, recipientWalletAddress) {
        
        
        this['sourceChain'] = sourceChain;
        this['destChain'] = destChain;
        this['tokenId'] = tokenId;
        this['sourceWalletAddress'] = sourceWalletAddress;
        this['recipientWalletAddress'] = recipientWalletAddress;
        
    }

    /**
    * Constructs a <code>Body16</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body16} obj Optional instance to populate.
    * @return {module:model/Body16} The populated <code>Body16</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body16();
                        
            
            if (data.hasOwnProperty('sourceChain')) {
                obj['sourceChain'] = ApiClient.convertToType(data['sourceChain'], 'String');
            }
            if (data.hasOwnProperty('destChain')) {
                obj['destChain'] = ApiClient.convertToType(data['destChain'], 'String');
            }
            if (data.hasOwnProperty('tokenId')) {
                obj['tokenId'] = ApiClient.convertToType(data['tokenId'], 'String');
            }
            if (data.hasOwnProperty('sourceWalletAddress')) {
                obj['sourceWalletAddress'] = ApiClient.convertToType(data['sourceWalletAddress'], 'String');
            }
            if (data.hasOwnProperty('recipientWalletAddress')) {
                obj['recipientWalletAddress'] = ApiClient.convertToType(data['recipientWalletAddress'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {module:model/Body16.SourceChainEnum} sourceChain
    */
    'sourceChain' = undefined;
    /**
    * @member {module:model/Body16.DestChainEnum} destChain
    */
    'destChain' = undefined;
    /**
    * @member {String} tokenId
    */
    'tokenId' = undefined;
    /**
    * @member {String} sourceWalletAddress
    */
    'sourceWalletAddress' = undefined;
    /**
    * @member {String} recipientWalletAddress
    */
    'recipientWalletAddress' = undefined;



    /**
    * Allowed values for the <code>sourceChain</code> property.
    * @enum {String}
    * @readonly
    */
    static SourceChainEnum = {
        /**
         * value: "goerli"
         * @const
         */
        "goerli": "goerli",
        /**
         * value: "bsc-testnet"
         * @const
         */
        "bsc-testnet": "bsc-testnet",
        /**
         * value: "fuji"
         * @const
         */
        "fuji": "fuji",
        /**
         * value: "mumbai"
         * @const
         */
        "mumbai": "mumbai",
        /**
         * value: "arbitrum-goerli"
         * @const
         */
        "arbitrum-goerli": "arbitrum-goerli",
        /**
         * value: "optimism-goerli"
         * @const
         */
        "optimism-goerli": "optimism-goerli",
        /**
         * value: "fantom-testnet"
         * @const
         */
        "fantom-testnet": "fantom-testnet",
        /**
         * value: "ethereum"
         * @const
         */
        "ethereum": "ethereum",
        /**
         * value: "avalanche"
         * @const
         */
        "avalanche": "avalanche",
        /**
         * value: "polygon"
         * @const
         */
        "polygon": "polygon",
        /**
         * value: "arbitrum"
         * @const
         */
        "arbitrum": "arbitrum",
        /**
         * value: "optimism"
         * @const
         */
        "optimism": "optimism",
        /**
         * value: "fantom"
         * @const
         */
        "fantom": "fantom"    };
    /**
    * Allowed values for the <code>destChain</code> property.
    * @enum {String}
    * @readonly
    */
    static DestChainEnum = {
        /**
         * value: "goerli"
         * @const
         */
        "goerli": "goerli",
        /**
         * value: "bsc-testnet"
         * @const
         */
        "bsc-testnet": "bsc-testnet",
        /**
         * value: "fuji"
         * @const
         */
        "fuji": "fuji",
        /**
         * value: "mumbai"
         * @const
         */
        "mumbai": "mumbai",
        /**
         * value: "arbitrum-goerli"
         * @const
         */
        "arbitrum-goerli": "arbitrum-goerli",
        /**
         * value: "optimism-goerli"
         * @const
         */
        "optimism-goerli": "optimism-goerli",
        /**
         * value: "fantom-testnet"
         * @const
         */
        "fantom-testnet": "fantom-testnet",
        /**
         * value: "ethereum"
         * @const
         */
        "ethereum": "ethereum",
        /**
         * value: "avalanche"
         * @const
         */
        "avalanche": "avalanche",
        /**
         * value: "polygon"
         * @const
         */
        "polygon": "polygon",
        /**
         * value: "arbitrum"
         * @const
         */
        "arbitrum": "arbitrum",
        /**
         * value: "optimism"
         * @const
         */
        "optimism": "optimism",
        /**
         * value: "fantom"
         * @const
         */
        "fantom": "fantom"    };

}
