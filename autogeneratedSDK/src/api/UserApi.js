/**
 * Verbwire API documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient.js";
import Error from '../model/Error.js';
import InlineResponse20015 from '../model/InlineResponse20015.js';

/**
* User service.
* @module api/UserApi
* @version 1.0.0
*/
export default class UserApi {

    /**
    * Constructs a new UserApi. 
    * @alias module:api/UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the nftUserOpsAllowListSharesForAddressPost operation.
     * @callback module:api/UserApi~nftUserOpsAllowListSharesForAddressPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Allowlist Shares
     * Display Allowlist shares for a specific address.
     * @param {module:api/UserApi~nftUserOpsAllowListSharesForAddressPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUserOpsAllowListSharesForAddressPost(contractAddress, allowListAddress, chain, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'contractAddress': contractAddress,
        'allowListAddress': allowListAddress,
        'chain': chain
      };

      let authNames = ['APIKey'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/userOps/allowListSharesForAddress', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUserOpsContractPaymentDetailsPost operation.
     * @callback module:api/UserApi~nftUserOpsContractPaymentDetailsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Payee Payment Details
     * Display payment details for a specific payee of a contract.
     * @param {module:api/UserApi~nftUserOpsContractPaymentDetailsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUserOpsContractPaymentDetailsPost(contractAddress, payeeAddress, chain, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'contractAddress': contractAddress,
        'payeeAddress': payeeAddress,
        'chain': chain
      };

      let authNames = ['APIKey'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/userOps/contractPaymentDetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUserOpsDeployedContractsGet operation.
     * @callback module:api/UserApi~nftUserOpsDeployedContractsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve deployed contracts
     * Produce a list of all your deployed contracts
     * @param {module:api/UserApi~nftUserOpsDeployedContractsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUserOpsDeployedContractsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/userOps/deployedContracts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUserOpsIpfsUploadsGet operation.
     * @callback module:api/UserApi~nftUserOpsIpfsUploadsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve your uploaded IPFS files
     * Produce a list of all your minted NFTs
     * @param {module:api/UserApi~nftUserOpsIpfsUploadsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUserOpsIpfsUploadsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/userOps/ipfsUploads', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUserOpsNftsMintedGet operation.
     * @callback module:api/UserApi~nftUserOpsNftsMintedGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve your minted NFTs
     * Produce a list of all your minted NFTs
     * @param {module:api/UserApi~nftUserOpsNftsMintedGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUserOpsNftsMintedGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/userOps/nftsMinted', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUserOpsPayeeAtIndexPost operation.
     * @callback module:api/UserApi~nftUserOpsPayeeAtIndexPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Payee
     * Display details of Payee at a certain Index.
     * @param {module:api/UserApi~nftUserOpsPayeeAtIndexPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUserOpsPayeeAtIndexPost(contractAddress, index, chain, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'contractAddress': contractAddress,
        'index': index,
        'chain': chain
      };

      let authNames = ['APIKey'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/userOps/payeeAtIndex', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUserOpsTransactionDetailsPost operation.
     * @callback module:api/UserApi~nftUserOpsTransactionDetailsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve specific transaction details
     * Get details for a specific transaction
     * @param {module:api/UserApi~nftUserOpsTransactionDetailsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUserOpsTransactionDetailsPost(transactionId, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'transactionId': transactionId
      };

      let authNames = ['APIKey'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/userOps/transactionDetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUserOpsUserCollectionContractDetailsPost operation.
     * @callback module:api/UserApi~nftUserOpsUserCollectionContractDetailsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Contract Details
     * Display details of your collection contract.
     * @param {module:api/UserApi~nftUserOpsUserCollectionContractDetailsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUserOpsUserCollectionContractDetailsPost(contractAddress, chain, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'contractAddress': contractAddress,
        'chain': chain
      };

      let authNames = ['APIKey'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/userOps/userCollectionContractDetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
