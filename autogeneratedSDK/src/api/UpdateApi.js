/**
 * Verbwire API documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient.js";
import Error from '../model/Error.js';
import InlineResponse20014 from '../model/InlineResponse20014.js';
import InlineResponse20015 from '../model/InlineResponse20015.js';
import InlineResponse400 from '../model/InlineResponse400.js';

/**
* Update service.
* @module api/UpdateApi
* @version 1.0.0
*/
export default class UpdateApi {

    /**
    * Constructs a new UpdateApi. 
    * @alias module:api/UpdateApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the nftDeployUpdateContractPost operation.
     * @callback module:api/UpdateApi~nftDeployUpdateContractPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20014} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Collection Contract
     * Update parameters of your collection contract
     * @param {module:api/UpdateApi~nftDeployUpdateContractPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20014}
     */
    nftDeployUpdateContractPost(contractAddress, chain, tokenURIPrereveal, allowListMintStartTime, publicSaleStartTime, allowlistMintPriceInWei, publicPriceInWei, metadataFrozen, baseTokenURI, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'contractAddress': contractAddress,
        'chain': chain,
        'tokenURIPrereveal': tokenURIPrereveal,
        'allowListMintStartTime': allowListMintStartTime,
        'publicSaleStartTime': publicSaleStartTime,
        'allowlistMintPriceInWei': allowlistMintPriceInWei,
        'publicPriceInWei': publicPriceInWei,
        'metadataFrozen': metadataFrozen,
        'baseTokenURI': baseTokenURI
      };

      let authNames = ['APIKey'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20014;

      return this.apiClient.callApi(
        '/nft/deploy/updateContract', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftDeployUpdateWithdrawFundsPost operation.
     * @callback module:api/UpdateApi~nftDeployUpdateWithdrawFundsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20014} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Withdraw Funds
     * Withdraw funds from your smart contract.
     * @param {module:api/UpdateApi~nftDeployUpdateWithdrawFundsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20014}
     */
    nftDeployUpdateWithdrawFundsPost(contractAddress, withdrawAddress, chain, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'contractAddress': contractAddress,
        'withdrawAddress': withdrawAddress,
        'chain': chain
      };

      let authNames = ['APIKey'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20014;

      return this.apiClient.callApi(
        '/nft/deploy/update/withdrawFunds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUpdateAddToAllowListPost operation.
     * @callback module:api/UpdateApi~nftUpdateAddToAllowListPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add addresses to Allowlist
     * Add an address (or group of addresses) to the allowlist of your collection contract.
     * @param {module:api/UpdateApi~nftUpdateAddToAllowListPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUpdateAddToAllowListPost(contractAddress, addresses, mintSlots, chain, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'contractAddress': contractAddress,
        'addresses': addresses,
        'mintSlots': mintSlots,
        'chain': chain
      };

      let authNames = ['APIKey'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/update/addToAllowList', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the nftUpdateTransferOperatorPost operation.
     * @callback module:api/UpdateApi~nftUpdateTransferOperatorPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Transfer Contract Operator
     * Transfer the Operator of your deployed collection contract. Works with only collection contracts.
     * @param {module:api/UpdateApi~nftUpdateTransferOperatorPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    nftUpdateTransferOperatorPost(contractAddress, newOperatorAddress, chain, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'contractAddress': contractAddress,
        'newOperatorAddress': newOperatorAddress,
        'chain': chain
      };

      let authNames = ['APIKey'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20015;

      return this.apiClient.callApi(
        '/nft/update/transferOperator', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
