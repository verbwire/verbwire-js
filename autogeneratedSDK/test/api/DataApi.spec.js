/**
 * Verbwire API documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VerbwireApiDocumentation);
  }
}(this, function(expect, VerbwireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VerbwireApiDocumentation.DataApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DataApi', function() {
    describe('nftDataAttributesForContractAddressGet', function() {
      it('should call nftDataAttributesForContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataAttributesForContractAddressGet
        //instance.nftDataAttributesForContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataAttributesForSlugGet', function() {
      it('should call nftDataAttributesForSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataAttributesForSlugGet
        //instance.nftDataAttributesForSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataAttributesWithTokensForContractAddressGet', function() {
      it('should call nftDataAttributesWithTokensForContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataAttributesWithTokensForContractAddressGet
        //instance.nftDataAttributesWithTokensForContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataAttributesWithTokensForSlugGet', function() {
      it('should call nftDataAttributesWithTokensForSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataAttributesWithTokensForSlugGet
        //instance.nftDataAttributesWithTokensForSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataCollectionsAllGet', function() {
      it('should call nftDataCollectionsAllGet successfully', function(done) {
        //uncomment below and update the code to test nftDataCollectionsAllGet
        //instance.nftDataCollectionsAllGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataCollectionsSearchGet', function() {
      it('should call nftDataCollectionsSearchGet successfully', function(done) {
        //uncomment below and update the code to test nftDataCollectionsSearchGet
        //instance.nftDataCollectionsSearchGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataCreatedGet', function() {
      it('should call nftDataCreatedGet successfully', function(done) {
        //uncomment below and update the code to test nftDataCreatedGet
        //instance.nftDataCreatedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataFloorPricesForContractAddressGet', function() {
      it('should call nftDataFloorPricesForContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataFloorPricesForContractAddressGet
        //instance.nftDataFloorPricesForContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataFloorPricesForSlugGet', function() {
      it('should call nftDataFloorPricesForSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataFloorPricesForSlugGet
        //instance.nftDataFloorPricesForSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataHistoricalStatsForContractAddressGet', function() {
      it('should call nftDataHistoricalStatsForContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataHistoricalStatsForContractAddressGet
        //instance.nftDataHistoricalStatsForContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataHistoricalStatsForSlugGet', function() {
      it('should call nftDataHistoricalStatsForSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataHistoricalStatsForSlugGet
        //instance.nftDataHistoricalStatsForSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataLastFloorPriceForContractAddressGet', function() {
      it('should call nftDataLastFloorPriceForContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataLastFloorPriceForContractAddressGet
        //instance.nftDataLastFloorPriceForContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataLastFloorPriceForSlugGet', function() {
      it('should call nftDataLastFloorPriceForSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataLastFloorPriceForSlugGet
        //instance.nftDataLastFloorPriceForSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataNftDetailsGet', function() {
      it('should call nftDataNftDetailsGet successfully', function(done) {
        //uncomment below and update the code to test nftDataNftDetailsGet
        //instance.nftDataNftDetailsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataOwnedGet', function() {
      it('should call nftDataOwnedGet successfully', function(done) {
        //uncomment below and update the code to test nftDataOwnedGet
        //instance.nftDataOwnedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataOwnershipForContractAddressGet', function() {
      it('should call nftDataOwnershipForContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataOwnershipForContractAddressGet
        //instance.nftDataOwnershipForContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataOwnershipForSlugGet', function() {
      it('should call nftDataOwnershipForSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataOwnershipForSlugGet
        //instance.nftDataOwnershipForSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataSalesEventsForContractAddressGet', function() {
      it('should call nftDataSalesEventsForContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataSalesEventsForContractAddressGet
        //instance.nftDataSalesEventsForContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataSalesEventsForSlugGet', function() {
      it('should call nftDataSalesEventsForSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataSalesEventsForSlugGet
        //instance.nftDataSalesEventsForSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataSearchAttributesInContractAddressGet', function() {
      it('should call nftDataSearchAttributesInContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataSearchAttributesInContractAddressGet
        //instance.nftDataSearchAttributesInContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataSearchAttributesInSlugGet', function() {
      it('should call nftDataSearchAttributesInSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataSearchAttributesInSlugGet
        //instance.nftDataSearchAttributesInSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataTransactionsByContractGet', function() {
      it('should call nftDataTransactionsByContractGet successfully', function(done) {
        //uncomment below and update the code to test nftDataTransactionsByContractGet
        //instance.nftDataTransactionsByContractGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataTransactionsGet', function() {
      it('should call nftDataTransactionsGet successfully', function(done) {
        //uncomment below and update the code to test nftDataTransactionsGet
        //instance.nftDataTransactionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataTransferEventsForContractAddressGet', function() {
      it('should call nftDataTransferEventsForContractAddressGet successfully', function(done) {
        //uncomment below and update the code to test nftDataTransferEventsForContractAddressGet
        //instance.nftDataTransferEventsForContractAddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nftDataTransferEventsForSlugGet', function() {
      it('should call nftDataTransferEventsForSlugGet successfully', function(done) {
        //uncomment below and update the code to test nftDataTransferEventsForSlugGet
        //instance.nftDataTransferEventsForSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
